# ===========================
# Deployment для Nginx
# ===========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
  labels:
    app: my-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      labels:
        app: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: d051a/my-app-nginx:4.0.0
        ports:
        - containerPort: 80

---
# ===========================
# Service для Nginx
# ===========================
apiVersion: v1
kind: Service
metadata:
  name: my-nginx-service
  annotations:
    metallb.universe.tf/allow-shared-ip: my-nginx
spec:
  type: LoadBalancer
  selector:
    app: my-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# ===========================
# Service для Ingress (NodePort)
# ===========================
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-nodeport
  namespace: ingress-nginx
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ingress-nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 31234

---
# ===========================
# Service для Prometheus-Grafana с NodePort
# ===========================
apiVersion: v1
kind: Service
metadata:
  name: prometheus-monitoring-grafana-nodeport
spec:
  type: NodePort
  selector:
    app: prometheus-monitoring-grafana
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 31080

---
# ===========================
# Ingress Controller для доступа к Nginx
# ===========================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-nginx-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-nginx-service
                port:
                  number: 80

---
# ===========================
# Ingress Controller для Grafana в namespace default
# ===========================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-grafana-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /monitoring;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /monitoring
            pathType: Prefix
            backend:
              service:
                name: prometheus-monitoring-grafana
                port:
                  number: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-monitoring-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-monitoring-grafana
  template:
    metadata:
      labels:
        app: prometheus-monitoring-grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          env:
            - name: GF_SERVER_ROOT_URL
              value: "%(protocol)s://%(domain)s/monitoring/"
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-config
              subPath: grafana.ini
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: default
data:
  grafana.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s/monitoring/
    serve_from_sub_path = true